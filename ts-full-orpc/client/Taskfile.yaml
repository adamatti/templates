# yaml-language-server: $schema=https://json.schemastore.org/taskfile.json
---
version: "3"

vars:
  DOCKER_TAG: app:local

tasks:
  default:
    desc: Show help
    aliases: [h]
    silent: true
    cmds:
      - task -l --sort alphanumeric

  install:
    desc: install
    aliases: [i]
    run: once
    sources:
      - package.json
      - pnpm-lock.yaml
      - pnpm-workspace.yaml
    cmds:
      - pnpm install --frozen-lockfile
      - pnpm approve-builds

  clean:
    desc: clean
    silent: true
    cmds:
      - rm -rf .task
      - rm -rf dist
      - rm -rf coverage
      - rm -rf server/types
      - rm -f server/contract.json

  clean-hard:
    desc: clean hard
    silent: true
    cmds:
      - task: clean
      - rm -rf node_modules/

  dev:
    desc: run as dev
    aliases: [r, run]
    cmds:
      - task: setup
      - pnpm --silent run dev

  lint:
    desc: lint
    aliases: [l]
    cmds:
      - task: setup
      - pnpm --silent run lint

  test:
    desc: run tests
    aliases: [t]
    cmds:
      - task: setup
      - pnpm --silent run test
  
  type-check:
    desc: type-check
    aliases: [tc]
    ignore_error: true
    cmds:
      - task: setup
      - pnpm exec tsc  --noEmit --project ./tsconfig.json

  check:
    desc: run checks
    cmds:
      - task: setup
      - task: lint
      - task: type-check
      - task: test

  build:
    desc: build
    cmds:
      - task: clean # optional
      - task: setup
      - task: check      
      - pnpm --silent run build

  docker:build:
    desc: Docker build
    aliases: [db]
    cmds:
      - task: setup
      - docker build . -t {{ .DOCKER_TAG }}

  docker:sh:
    desc: SH docker image
    aliases: [dsh, sh]
    cmds:
      - task: docker:build
      - docker run -it --rm --entrypoint /bin/sh -w /usr/share/nginx/html/ {{ .DOCKER_TAG }}
  
  docker:run:
    desc: Run docker image
    aliases: [dr]
    cmds:
      - task: docker:build
      - docker run -it --rm -p 3000:80 {{ .DOCKER_TAG }}

  setup:
    desc: Copy client from server
    run: once
    deps: [install]
    sources:
      - ../server/dist/contract.json
      - ../server/dist/types/**/*
    cmds:
      - cd ../server && task contract:export
      - rm -rf server/types && mkdir -p server/types && cp -r ../server/dist/types/* ./server/types/
      - rm -f server/contract.json && cp ../server/dist/contract.json ./server/contract.json