# yaml-language-server: $schema=https://json.schemastore.org/taskfile.json
---
version: "3"

vars:
  DOCKER_TAG: app:local

tasks:
  default:
    desc: Show help
    aliases: [h]
    silent: true
    cmds:
      - task -l --sort alphanumeric

  install:
    desc: install
    aliases: [i]
    run: once
    sources:
      - package.json
      - pnpm-lock.yaml
      - pnpm-workspace.yaml
    cmds:
      - ni
      - pnpm approve-builds

  clean:
    desc: clean
    silent: true
    cmds:
      - rm -rf .task
      - rm -rf dist
      - rm -rf coverage

  clean-hard:
    desc: clean hard
    silent: true
    cmds:
      - task: clean
      - rm -rf node_modules/

  run:
    desc: run
    aliases: [r]
    interactive: true
    cmds:
      - task: install
      - pnpm dlx esno src/main.ts
      # - node src/index.ts

  watch:
    desc: run (watch mode)
    aliases: [w]
    cmds:
      - nlx esno --watch src/main.ts

  lint:
    desc: Lint
    aliases: [l]
    cmds:
      - task: install
      - pnpm --silent exec biome check --write ./

  test:
    desc: Test
    aliases: [t]
    cmds:
      - nr --silent test

  type-check:
    desc: type-check
    aliases: [tc]
    ignore_error: true
    cmds:
      - task: install
      - pnpm exec tsc --noEmit --project ./tsconfig.json

  check:
    desc: Run checks
    cmds:
      - task: type-check
      - task: test
      - task: lint

  docker:build:
    desc: build docker image
    aliases: [db]
    cmds:
      - docker build --quiet . -t {{.DOCKER_TAG}}

  docker:sh:
    desc: enter on docker image
    aliases: [dsh, sh]
    interactive: true
    cmds:
      - task: docker:build
      - >-
        docker run -it --rm -w /app
        --entrypoint /bin/sh
        {{.DOCKER_TAG}}

  docker:run:
    desc: run docker image
    interactive: true
    aliases: [dr]
    cmds:
      - task: docker:build
      - >-
        docker run -it --rm -w /app -p 3001:3000
        {{.DOCKER_TAG}}

  contract:export:
    desc: export contract
    aliases: [export, e]
    sources:
      - src/**/*
    status:
      - test -f dist/contract.json
      - test -d dist/types
    cmds:
      - task: install
      - rm -f dist/contract.json
      - rm -f dist/router.js
      - rm -f dist/router.js.map
      - rm -rf dist/types
      - mkdir -p dist/types
      - pnpm exec tsx scripts/export-contract.ts
      - pnpm exec tsc --project ./tsconfig.json
      
